package domain;

import java.util.Collection;
import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;

import org.hibernate.validator.constraints.NotBlank;
import org.springframework.format.annotation.DateTimeFormat;

@Entity
@Access(AccessType.PROPERTY)
public class Pilgrim extends Actor{

	// Attributes -------------------------------------------------------------
	private CreditCard creditCard;
	private Date birthDate;
	private String nationality;
	
	@NotNull
	@Valid
	public CreditCard getCreditCard() {
		return creditCard;
	}
	public void setCreditCard(CreditCard creditCard) {
		this.creditCard = creditCard;
	}
	@Past
	@DateTimeFormat(pattern="dd/MM/yyyy HH:mm")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getBirthDate() {
		return birthDate;
	}
	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}
	@NotBlank
	public String getNationality() {
		return nationality;
	}
	public void setNationality(String nationality) {
		this.nationality = nationality;
	}
	
	// Relationships ----------------------------------------------------
	private Collection<Complaint> complaints;
	private Collection<Route> routes;
	private Collection<Anecdote> anecdotes;
	private Collection<Assessment> assessments;

	@Valid
	@OneToMany(mappedBy = "pilgrim")
	public Collection<Complaint> getComplaints() {
		return complaints;
	}
	public void setComplaint(Collection<Complaint> complaints) {
		this.complaints = complaints;
	}
	@Valid
	@ManyToMany
	public Collection<Route> getRoutes() {
		return routes;
	}
	public void setRoutes(Collection<Route> routes) {
		this.routes = routes;
	}
	@Valid
	@OneToMany(mappedBy = "pilgrim")
	public Collection<Anecdote> getAnecdotes() {
		return anecdotes;
	}
	public void setAnecdotes(Collection<Anecdote> anecdotes) {
		this.anecdotes = anecdotes;
	}
	@Valid
	@OneToMany(mappedBy = "pilgrim")
	public Collection<Assessment> getAssessments() {
		return assessments;
	}
	public void setAssessments(Collection<Assessment> assessments) {
		this.assessments = assessments;
	}
}
